{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/details/details.component.css","webpack:///./src/app/details/details.component.html","webpack:///./src/app/details/details.component.ts","webpack:///./src/app/edit/edit.component.css","webpack:///./src/app/edit/edit.component.html","webpack:///./src/app/edit/edit.component.ts","webpack:///./src/app/list/list.component.css","webpack:///./src/app/list/list.component.html","webpack:///./src/app/list/list.component.ts","webpack:///./src/app/pet.service.ts","webpack:///./src/app/single/single.component.css","webpack:///./src/app/single/single.component.html","webpack:///./src/app/single/single.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ListComponent } from './list/list.component';\nimport { EditComponent } from './edit/edit.component';\nimport { DetailsComponent } from './details/details.component';\nimport { SingleComponent } from './single/single.component';\n\nconst routes: Routes = [\n  { path: '', component: ListComponent  },\n  // { path: 'pets', component: ListComponent  },\n  { path: 'edit/:id', component: EditComponent},\n  { path: 'pet/:id', component: DetailsComponent},\n  { path: 'pets/create', component: SingleComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Pet Shelters';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport {PetService} from './pet.service';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ListComponent } from './list/list.component';\nimport { SingleComponent } from './single/single.component';\nimport { EditComponent } from './edit/edit.component';\nimport { DetailsComponent } from './details/details.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ListComponent,\n    SingleComponent,\n    EditComponent,\n    DetailsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [PetService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RldGFpbHMvZGV0YWlscy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<style>\\n    h2{\\n        background-color: palevioletred; \\n    }\\n    .details{\\n        border: 3px solid black;\\n    }\\n</style>\\n\\n<h2>Details about {{ pet.name }}</h2>\\n<div class='details'>\\n    <p>Pet Type: {{ pet.type}}</p>\\n    <p>Description:  {{ pet.description }}</p>\\n    <p>Skills: {{pet.skills.skill1}} , {{pet.skills.skill2}} , {{ pet.skills.skill3 }}</p>\\n    \\n    <button class='btn btn-danger' (click) = \\\"delete(pet._id)\\\">Adopt!</button>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { PetService } from '../pet.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-details',\n  templateUrl: './details.component.html',\n  styleUrls: ['./details.component.css']\n})\nexport class DetailsComponent implements OnInit {\n  pet: any;\n  errors = {};\n\n  constructor(private _ptservice: PetService, private _router: Router, private _route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this._route.params.subscribe((params: Params) => {\n      this.getPet(params['id']);\n      console.log(params['id']);\n    });\n  }\n  getPet(id) {\n    let observable = this._ptservice.getOne(id);\n    observable.subscribe( data => {\n      this.pet = data['shelter'];\n      console.log(this.pet);\n    });\n  }\n\n  delete(id) {\n    let observable = this._ptservice.deleteOne(id);\n    observable.subscribe( data => {\n      this._router.navigate(['/']);\n    });\n  }\n\n}\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VkaXQvZWRpdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<link href=\\\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css\\\" rel=\\\"stylesheet\\\" integrity=\\\"sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO\\\" crossorigin=\\\"anonymous\\\">\\n<style>\\n  .errors{\\n    color: red;\\n  }\\n  .form-group{\\n    margin-left:10px;\\n  }\\n\\n  .edit{\\n    border: 3px solid black;\\n  }\\n\\n</style>\\n<form (submit)=\\\"update(pet._id)\\\" class='edit'>\\n    <div class =\\\"form-group\\\">\\n      <label for=\\\"pet.name\\\">Pet Name: </label>\\n      <div>\\n        <input type=\\\"text\\\" name=\\\"pet.name\\\" [(ngModel)]=\\\"pet.name\\\" placeholder=\\\"Pet Name\\\" required minlength='3'>\\n        <p class='errors' *ngIf=\\\"errors.name\\\"> {{errors.name.message}}</p>\\n      </div>\\n    </div>\\n    <div class =\\\"form-group\\\">\\n        <label for=\\\"pet.type\\\">Pet Type: </label>\\n        <div>\\n          <input type=\\\"text\\\" name=\\\"pet.type\\\" [(ngModel)]=\\\"pet.type\\\" placeholder=\\\"Pet Type\\\" required minlength='3' >\\n          <p class='errors' *ngIf=\\\"errors.type\\\"> {{errors.type.message}}</p>\\n        </div>\\n      </div>\\n\\n      <div class =\\\"form-group\\\">\\n          <label for=\\\"pet.description\\\">Description: </label>\\n          <div>\\n            <input type=\\\"text\\\" name=\\\"pet.description\\\" [(ngModel)]=\\\"pet.description\\\" cols=50 rows=5 placeholder=\\\"Description\\\" required minlength='3'>\\n            <p class='errors' *ngIf=\\\"errors.description\\\"> {{errors.description.message}}</p>\\n          </div>\\n        </div>\\n\\n    <div class = \\\"form-group\\\">\\n      <label for=\\\"pet.skills\\\">Skills: </label>\\n      <div>\\n        <label for=\\\"pet.skills.skills1\\\">Skills 1: </label>\\n        <textarea name=\\\"pet.skills.skill1\\\" [(ngModel)]=\\\"pet.skills.skill1\\\" cols=50 rows=5 required minlength='3'></textarea>\\n      </div>\\n      <div>\\n        <label for=\\\"pet.skills.skills2\\\">Skills 2: </label>\\n        <textarea name=\\\"pet.skills.skill2\\\" [(ngModel)]=\\\"pet.skills.skill2\\\" cols=50 rows=5 required minlength='3'></textarea>\\n      </div>\\n      <div>\\n          <label for=\\\"pet.skills.skills3\\\">Skills 3: </label>\\n          <textarea name=\\\"pet.skills.skill3\\\" [(ngModel)]=\\\"pet.skills.skill3\\\" cols=50 rows=5 required minlength='3'></textarea>\\n        </div>\\n    </div>\\n    <input type=\\\"submit\\\" value=\\\"Submit\\\" class='btn btn-success'/>\\n    \\n    <a [routerLink]=\\\"['/']\\\"><button class=\\\"btn btn-primary\\\">Cancel</button></a>\\n  </form>\\n\\n  \"","import { Component, OnInit } from '@angular/core';\nimport { PetService } from '../pet.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n  pet = {};\n  errors = {};\n\n  constructor(private _ftservice: PetService, private _router: Router, private _route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this._route.params.subscribe((params: Params)=>{\n      this.getPet(params['id']);\n    })\n  }\n\n  getPet(id){\n    let observable = this._ftservice.getOne(id);\n    observable.subscribe( data => {\n      this.pet = data['shelter']\n    })\n  }\n\n  update(id){\n    let observable = this._ftservice.updateOne(id, this.pet);\n    observable.subscribe( data => {\n      if (data['status']== 'not ok'){\n        this.errors = data['errors']['errors'];\n      }else{\n        this._router.navigate(['/']);\n      }\n    })\n\n  }\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import { Component, OnInit } from '@angular/core';\n// import { PetService } from '../pet.service';\n// import { ActivatedRoute, Params, Router } from '@angular/router';\n\n// @Component({\n//   selector: 'app-edit',\n//   templateUrl: './edit.component.html',\n//   styleUrls: ['./edit.component.css']\n// })\n// export class EditComponent implements OnInit {\n//   shelters = {};\n//   errors = {};\n\n//   constructor(private _ftservice: PetService, private _router: Router, private _route: ActivatedRoute) { }\n\n//   ngOnInit() {\n//     this._route.params.subscribe((params: Params)=>{\n//       this.getPet(params['id']);\n//     })\n//   }\n\n//   getPet(id){\n//     let observable = this._ftservice.getOne(id);\n//     observable.subscribe( data => {\n//       this.shelters = data['shelters']\n//     })\n//   }\n\n//   update(id){\n//     let observable = this._ftservice.updateOne(id, this.shelters);\n//     observable.subscribe( data => {\n//       if (data['status']== 'not ok'){\n//         this.errors = data['errors']['errors'];\n//       }else{\n//         this._router.navigate(['/']);\n//       }\n//     })\n\n//   }\n\n//   delete(id){\n//     let observable = this._ftservice.deleteOne(id);\n//     observable.subscribe( data => {\n//         this._router.navigate(['/']);\n//     })\n//   }\n\n// }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xpc3QvbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<link href=\\\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css\\\" rel=\\\"stylesheet\\\" integrity=\\\"sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO\\\" crossorigin=\\\"anonymous\\\">\\n<style>\\n  .navbar{\\n    background-color: palevioletred;\\n  }\\n</style>\\n\\n<div>\\n    <nav class=\\\"navbar\\\" style=\\\"text-align: center;\\\">\\n      <div class=\\\"container-fluid\\\">\\n        <div class=\\\"navbar-header\\\">\\n            <h1>\\n              Pet Shelter\\n            </h1>\\n            <h2>These pets are looking for a home!</h2>\\n        </div>\\n        <div class=\\\"navbar\\\" >\\n          <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['pets/create']\\\"><button class=\\\"btn btn-primary\\\">Add a pet to the shelter</button></a>\\n          <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/']\\\"><button class=\\\"btn btn-primary\\\">Dashboard</button></a>\\n        </div>\\n      </div>\\n    </nav>\\n\\n\\n<table class=\\\"table table-striped\\\">\\n  <thead>\\n    <tr>\\n      <th scope=\\\"col\\\">Name</th>\\n      <th scope=\\\"col\\\">Type</th>\\n      <th scope=\\\"col\\\">Actions</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let shelter of shelters\\\" >   \\n      <td>{{shelter.name}}</td>\\n      <td>{{shelter.type}}</td>\\n      <td> \\n        <a [routerLink]=\\\"['/pet', shelter._id]\\\"><button> Details</button></a>\\n        <a [routerLink]=\\\"['/edit', shelter._id]\\\"><button>Edit</button></a>\\n      </td>\\n    </tr>\\n  </tbody>\\n</table>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { PetService } from '../pet.service';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n  shelters = [];\n    constructor(private _petservice: PetService) { }\n  \n    ngOnInit() {\n      this.getAllPets();\n    }\n  \n    getAllPets(){\n      let observable = this._petservice.getPets();\n      observable.subscribe( data => {\n        this.shelters = data['shelters'];\n        console.log(data);\n      });\n    }\n  \n  }","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PetService {\n\n  constructor(private _http: HttpClient) { }\n\n  getPets(){\n    return this._http.get('/pets');\n  }\n  createPet(pet){\n    return this._http.post('/pet', pet);\n  }\n  getOne(id){\n\n    return this._http.get(`/pet/${id}`);\n  }\n\n  addPet(id, review){\n    return this._http.post(`/pet/${id}/review`, review);\n  }\n\n  updateOne(id, pet){\n    return this._http.put(`/pet/${id}`, pet);\n  }\n\n  deleteOne(id){\n    return this._http.delete(`/pet/${id}`);\n  }\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NpbmdsZS9zaW5nbGUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<link href=\\\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css\\\" rel=\\\"stylesheet\\\" integrity=\\\"sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO\\\" crossorigin=\\\"anonymous\\\">\\n<style>\\n  .errors{\\n    color: red;\\n  }\\n\\n  .form-group{\\n    margin-left: 10px;\\n  }\\n\\n  .single{\\n    border: 3px solid black;\\n  }\\n\\n</style>\\n<form (submit)=\\\"create()\\\" class='single'>\\n    <div class =\\\"form-group\\\">\\n      <label for=\\\"pet.name\\\">Pet Name: </label>\\n      <div>\\n        <input type=\\\"text\\\" name=\\\"pet.name\\\" [(ngModel)]=\\\"pet.name\\\" placeholder=\\\"Pet Name\\\" required minlength='3'>\\n        <p class='errors' *ngIf=\\\"errors.name\\\"> {{errors.name.message}}</p>\\n      </div>\\n    </div>\\n    <div class =\\\"form-group\\\">\\n        <label for=\\\"pet.type\\\">Pet Type: </label>\\n        <div>\\n          <input type=\\\"text\\\" name=\\\"pet.type\\\" [(ngModel)]=\\\"pet.type\\\" placeholder=\\\"Pet Type\\\" required minlength='3'>\\n          <p class='errors' *ngIf=\\\"errors.type\\\"> {{errors.type.message}}</p>\\n        </div>\\n      </div>\\n      <div class =\\\"form-group\\\">\\n          <label for=\\\"pet.description\\\">Description: </label>\\n          <div>\\n            <input type=\\\"text\\\" name=\\\"pet.description\\\" [(ngModel)]=\\\"pet.description\\\" placeholder=\\\"Description\\\" required minlength='3'>\\n            <p class='errors' *ngIf=\\\"errors.description\\\"> {{errors.description.message}}</p>\\n          </div>\\n        </div>\\n\\n    <div class = \\\"form-group\\\">\\n      <label for=\\\"pet.skills\\\">Skills: </label>\\n      <div>\\n        <label for=\\\"pet.skills.skills1\\\">Skills 1: </label>\\n        <textarea name=\\\"pet.skills.skill1\\\" [(ngModel)]=\\\"pet.skills.skill1\\\" cols=50 rows=5></textarea>\\n      </div>\\n      <div>\\n        <label for=\\\"pet.skills.skills2\\\">Skills 2: </label>\\n        <textarea name=\\\"pet.skills.skill2\\\" [(ngModel)]=\\\"pet.skills.skill2\\\" cols=50 rows=5></textarea>\\n      </div>\\n      <div>\\n          <label for=\\\"pet.skills.skills3\\\">Skills 3: </label>\\n          <textarea name=\\\"pet.skills.skill3\\\" [(ngModel)]=\\\"pet.skills.skill3\\\" cols=50 rows=5></textarea>\\n        </div>\\n    </div>\\n    <input type=\\\"submit\\\" value=\\\"Submit\\\" class='btn btn-success'/>\\n    \\n    <a [routerLink]=\\\"['/']\\\"><button class=\\\"btn btn-primary\\\">Cancel</button></a>\\n  </form>\"","import { Component, OnInit } from '@angular/core';\nimport { PetService } from '../pet.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-single',\n  templateUrl: './single.component.html',\n  styleUrls: ['./single.component.css']\n})\nexport class SingleComponent implements OnInit {\n  pet = {\n    \"name\": '',\n    \"type\": '',\n    \"description\": '',\n    \"skills\": {\n      \"skill1\" : \"\",\n      \"skill2\" : \"\",\n      \"skill3\" : \"\"\n    }\n  }\n  errors = {};\n  constructor(private _petService: PetService, private _router: Router) { }\n\n  ngOnInit() {\n  }\n  create(){\n    let observable = this._petService.createPet(this.pet);\n    observable.subscribe(data => {\n      console.log(data);\n      if (data['status']== 'not ok'){\n        this.errors = data['errors']['errors'];\n      } \n      else {\n        this._router.navigate(['/']);\n      }\n    });\n  }\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}